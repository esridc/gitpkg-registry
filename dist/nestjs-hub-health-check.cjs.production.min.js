"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("tslib"),r=require("@nestjs/common"),o=require("@nestjs/terminus"),n=require("@nestjs/core");exports.HealthController=function(){function e(e,t,r){var o,n,a=this;this.health=e,this.modelRef=t,this.options=r;var l=null!=(o=null==(n=this.options)?void 0:n.checks)?o:[];this.checkers=l.map((function(e){return a.getChecker(e)}))}var t=e.prototype;return t.check=function(){return this.health.check(this.checkers)},t.getChecker=function(e){switch(e.type){case"database":var t=this.modelRef.get(o.TypeOrmHealthIndicator);return function(){return t.pingCheck("database")};default:throw new Error('Invalid health check type "'+e.type+'"')}},e}(),t.__decorate([r.Get(),o.HealthCheck(),t.__metadata("design:type",Function),t.__metadata("design:paramtypes",[]),t.__metadata("design:returntype",Promise)],exports.HealthController.prototype,"check",null),exports.HealthController=t.__decorate([r.Controller("health"),t.__param(2,r.Inject("HEALTH_CHECK_OPTIONS")),t.__metadata("design:paramtypes",[o.HealthCheckService,n.ModuleRef,Object])],exports.HealthController),exports.HealthModule=e=function(){function t(){}return t.forRoot=function(t){return{module:e,controllers:[exports.HealthController],imports:[o.TerminusModule],providers:[{provide:"HEALTH_CHECK_OPTIONS",useValue:t}]}},t}(),exports.HealthModule=e=t.__decorate([r.Module({})],exports.HealthModule);
//# sourceMappingURL=nestjs-hub-health-check.cjs.production.min.js.map
